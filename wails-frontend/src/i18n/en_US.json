{
  "success": {
    "delete": "The account has been deleted",
    "new-password": "The password has been created",
    "import": "The account has been imported",
    "sign": "The transaction has been signed",
    "backup": "Your .yaml file has been downloaded",
    "success": "Success"
  },
  "import": {
    "steps": {
      "private": "Private Key",
      "account": "Account name",
      "password": "Password"
    }
  },
  "signRule": {
    "addRule": {
      "title": "Add a signature rule"
    },
    "updateRule": {
      "title": "Update a signature rule"
    },
    "deleteRule": {
      "title": "Delete a signature rule"
    },
    "behavior": {
      "DISABLE_PASSWORD_PROMPT": "You are allowing the wallet to remember your password and enable one click sign for the selected contract",
      "AUTO_SIGN": "You are allowing the wallet to sign transactions without asking for confirmation for the selected contract"
    },
    "description": "Description from the requesting dApp",
    "details": "Rule details",
    "contract": "Contract",
    "name": "Name",
    "ruleType": "Rule type",
    "enabled": "Enable",
    "rulesTypeDesc": {
      "AUTO_SIGN": "Auto sign",
      "DISABLE_PASSWORD_PROMPT": "Remember password"
    }
  },
  "password-prompt": {
    "account": "Account:",
    "transfer": {
      "from": "from: ",
      "to": "to: ",
      "fee": "applied fee: {fee} nMas"
    },
    "title": {
      "transfer-request": "Sign a transaction",
      "sign": "Sign an operation",
      "sign-message": "Sign a message",
      "delete": "Delete an account",
      "unlock": "Unlock"
    },
    "subtitle": {
      "default": "Enter your password below to validate.",
      "delete": "Enter your password to delete your wallet.",
      "sign": "Enter your password to sign a transaction."
    },
    "buttons": {
      "default": "Apply",
      "delete": "Delete",
      "sign": "Sign",
      "transfer": "Sign",
      "cancel": "Cancel"
    },
    "sign": {
      "from": "From ",
      "to": "To ",
      "contract": "Contract",
      "operation-type": "Operation type",
      "operation-const": "Operation cost",
      "description": "Description",
      "description-tooltip": "Description provided by a dApp",
      "message": "Message",
      "view-details": "View details",
      "message-format": "Message format: ",
      "function-called": "Function called",
      "fees": "Fees ",
      "fees-tooltip": {
        "1": "The compensation paid to",
        "2": "validators for computational work."
      },
      "fees-to-low": "Fees are too low",
      "fees-to-high": "Fees are too high",
      "coins": "Coins ",
      "coins-tooltip": "The amount of coins locked for",
      "coins-tooltip-2": "storage space on the ledger.",
      "deployed-coins": "Deployed contract coins",
      "deployed-coins-tooltip": "The amount of coins sent to the deploying contract.",
      "deployed-bytecode-cost": "Deployed bytecode cost",
      "deployed-bytecode-cost-tooltip": "The amount of coins locked for storage space used to store the deployed contract.",
      "deploy-sc-warning": {
        "1": "DeploySC operation can spend coins and tokens from your account.",
        "2": "Only proceed if it comes from a trusted source."
      },
      "deploy-sc-tooltip": "DeploySC lets you deploy a smart contract on the Massa network.",
      "edit-fees": "edit fees",
      "confirm-fees": "confirm change",
      "reset-fees": "reset to default",
      "max-coins": "Max. spendable MAS",
      "roll-amount": "Roll amount",
      "amount-to-send": "Amount to send",
      "spend-amount": "Spend amount",
      "receive-amount": "Receive amount",
      "operation-types": {
        "0": "Transaction",
        "1": "Roll buy",
        "2": "Roll sell",
        "3": "Execute SC",
        "4": "Call SC"
      },
      "deploy-sc-pseudo-operation-type": "Deploy SC",
      "execute-sc-tooltip": {
        "1": "ExecuteSC operation is a powerful functionality on Massa. It enables the execution of smart contracts directly, instead of storing them on-chain.",
        "2": "As it is a smart contract which is executing certain functions, coins and tokens can be spent from your account.",
        "3": "Proceed only if it originates from a trusted source."
      },
      "execute-sc-warning": {
        "1": "ExecuteSC operation can spend coins and tokens from your account.",
        "2": "Only proceed if it comes from a trusted source."
      },
      "execute-sc-max-coins-tooltip": {
        "1": "Most similar concept is Giving Allowance on EVM chains.",
        "2": "In ExecuteSC sense, it is the maximal amount of MAS that can be spent in this operation."
      },
      "unknown-network-name": "Unknown",
      "recipient": "Recipient",
      "amount": "Amount"
    }
  },
  "backup": {
    "title": "Back up",
    "subtitle": {
      "choose-method": "Choose a back up method",
      "private-key": "Enter your password to show your private key.",
      "public-key-title": "Public key:",
      "private-key-title": "Private key:"
    },
    "inputs": {
      "private-key": {
        "placeholder": "Private key"
      },
      "password": {
        "placeholder": "Password"
      }
    },
    "buttons": {
      "download": "Download a .yaml file",
      "show": "Show key pairs",
      "copy": "Copy Private Key",
      "next": "Next",
      "cancel": "Cancel"
    }
  },
  "errors": {
    "Nickname-0001": "Invalid nickname",
    "account-invalid-format": "The account name can't contain any special characters, and 32 characters max.",
    "nickname-required": "Nickname is required",
    "PrivateKey-0001": "Invalid private key",
    "NoFile-0001": "No file selected",
    "AccountFile-0001": "Unsupported file format. Please, try another file or import the account by providing private keys.",
    "DuplicateKey-0001": "Private key already exists",
    "Unknown-0001": "Unknown error, try again",
    "Network-0001": "Network error, try again",
    "InvalidFees-0001": "Invalid fees",
    "DuplicateNickname-001": "This account name already exists",
    "Timeout-0001": "Timeout: Please close this pop-up and try again.",
    "WrongPassword-0001": "Wrong password",
    "ActionCanceled-0001": "Action canceled",
    "PasswordRequired": "Password is required",
    "Wallet-0011": "Failed to sign: operation is not base 64 valid",
    "Wallet-0012": "Failed to sign: invalid operation",
    "Wallet-0021": "Failed to sign",
    "transaction": "Failed to process transaction",
    "delete": "Failed to delete account",
    "default": "Failed to process operation",
    "addRule": "Failed to add signature rule",
    "updateRule": "Failed to update signature rule",
    "deleteRule": "Failed to delete signature rule",
    "unknownRuleRequest": "Unknown signature rule request"
  }
}
