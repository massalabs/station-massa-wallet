// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/massalabs/station-massa-wallet/api/server/models"
)

// RequestOKCode is the HTTP code returned for type RequestOK
const RequestOKCode int = 200

/*
RequestOK Success.

swagger:response requestOK
*/
type RequestOK struct {

	/*
	  In: Body
	*/
	Payload *models.RequestResponse `json:"body,omitempty"`
}

// NewRequestOK creates RequestOK with default headers values
func NewRequestOK() *RequestOK {

	return &RequestOK{}
}

// WithPayload adds the payload to the request o k response
func (o *RequestOK) WithPayload(payload *models.RequestResponse) *RequestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request o k response
func (o *RequestOK) SetPayload(payload *models.RequestResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestBadRequestCode is the HTTP code returned for type RequestBadRequest
const RequestBadRequestCode int = 400

/*
RequestBadRequest Bad request.

swagger:response requestBadRequest
*/
type RequestBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestBadRequest creates RequestBadRequest with default headers values
func NewRequestBadRequest() *RequestBadRequest {

	return &RequestBadRequest{}
}

// WithPayload adds the payload to the request bad request response
func (o *RequestBadRequest) WithPayload(payload *models.Error) *RequestBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request bad request response
func (o *RequestBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestUnauthorizedCode is the HTTP code returned for type RequestUnauthorized
const RequestUnauthorizedCode int = 401

/*
RequestUnauthorized Unauthorized - The request requires user authentication.

swagger:response requestUnauthorized
*/
type RequestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestUnauthorized creates RequestUnauthorized with default headers values
func NewRequestUnauthorized() *RequestUnauthorized {

	return &RequestUnauthorized{}
}

// WithPayload adds the payload to the request unauthorized response
func (o *RequestUnauthorized) WithPayload(payload *models.Error) *RequestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request unauthorized response
func (o *RequestUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestNotFoundCode is the HTTP code returned for type RequestNotFound
const RequestNotFoundCode int = 404

/*
RequestNotFound Account Not found.

swagger:response requestNotFound
*/
type RequestNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestNotFound creates RequestNotFound with default headers values
func NewRequestNotFound() *RequestNotFound {

	return &RequestNotFound{}
}

// WithPayload adds the payload to the request not found response
func (o *RequestNotFound) WithPayload(payload *models.Error) *RequestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request not found response
func (o *RequestNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestUnprocessableEntityCode is the HTTP code returned for type RequestUnprocessableEntity
const RequestUnprocessableEntityCode int = 422

/*
RequestUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response requestUnprocessableEntity
*/
type RequestUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestUnprocessableEntity creates RequestUnprocessableEntity with default headers values
func NewRequestUnprocessableEntity() *RequestUnprocessableEntity {

	return &RequestUnprocessableEntity{}
}

// WithPayload adds the payload to the request unprocessable entity response
func (o *RequestUnprocessableEntity) WithPayload(payload *models.Error) *RequestUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request unprocessable entity response
func (o *RequestUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestInternalServerErrorCode is the HTTP code returned for type RequestInternalServerError
const RequestInternalServerErrorCode int = 500

/*
RequestInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response requestInternalServerError
*/
type RequestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRequestInternalServerError creates RequestInternalServerError with default headers values
func NewRequestInternalServerError() *RequestInternalServerError {

	return &RequestInternalServerError{}
}

// WithPayload adds the payload to the request internal server error response
func (o *RequestInternalServerError) WithPayload(payload *models.Error) *RequestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request internal server error response
func (o *RequestInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
