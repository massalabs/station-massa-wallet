// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra-plugin-massa-wallet/api/server/models"
)

// RestWalletCreateOKCode is the HTTP code returned for type RestWalletCreateOK
const RestWalletCreateOKCode int = 200

/*
RestWalletCreateOK New wallet created.

swagger:response restWalletCreateOK
*/
type RestWalletCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Wallet `json:"body,omitempty"`
}

// NewRestWalletCreateOK creates RestWalletCreateOK with default headers values
func NewRestWalletCreateOK() *RestWalletCreateOK {

	return &RestWalletCreateOK{}
}

// WithPayload adds the payload to the rest wallet create o k response
func (o *RestWalletCreateOK) WithPayload(payload *models.Wallet) *RestWalletCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest wallet create o k response
func (o *RestWalletCreateOK) SetPayload(payload *models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestWalletCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestWalletCreateBadRequestCode is the HTTP code returned for type RestWalletCreateBadRequest
const RestWalletCreateBadRequestCode int = 400

/*
RestWalletCreateBadRequest Bad request.

swagger:response restWalletCreateBadRequest
*/
type RestWalletCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestWalletCreateBadRequest creates RestWalletCreateBadRequest with default headers values
func NewRestWalletCreateBadRequest() *RestWalletCreateBadRequest {

	return &RestWalletCreateBadRequest{}
}

// WithPayload adds the payload to the rest wallet create bad request response
func (o *RestWalletCreateBadRequest) WithPayload(payload *models.Error) *RestWalletCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest wallet create bad request response
func (o *RestWalletCreateBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestWalletCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestWalletCreateUnprocessableEntityCode is the HTTP code returned for type RestWalletCreateUnprocessableEntity
const RestWalletCreateUnprocessableEntityCode int = 422

/*
RestWalletCreateUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response restWalletCreateUnprocessableEntity
*/
type RestWalletCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestWalletCreateUnprocessableEntity creates RestWalletCreateUnprocessableEntity with default headers values
func NewRestWalletCreateUnprocessableEntity() *RestWalletCreateUnprocessableEntity {

	return &RestWalletCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the rest wallet create unprocessable entity response
func (o *RestWalletCreateUnprocessableEntity) WithPayload(payload *models.Error) *RestWalletCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest wallet create unprocessable entity response
func (o *RestWalletCreateUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestWalletCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestWalletCreateInternalServerErrorCode is the HTTP code returned for type RestWalletCreateInternalServerError
const RestWalletCreateInternalServerErrorCode int = 500

/*
RestWalletCreateInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response restWalletCreateInternalServerError
*/
type RestWalletCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestWalletCreateInternalServerError creates RestWalletCreateInternalServerError with default headers values
func NewRestWalletCreateInternalServerError() *RestWalletCreateInternalServerError {

	return &RestWalletCreateInternalServerError{}
}

// WithPayload adds the payload to the rest wallet create internal server error response
func (o *RestWalletCreateInternalServerError) WithPayload(payload *models.Error) *RestWalletCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest wallet create internal server error response
func (o *RestWalletCreateInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestWalletCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
