// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RestCreateAccountHandlerFunc turns a function with the right signature into a rest create account handler
type RestCreateAccountHandlerFunc func(RestCreateAccountParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RestCreateAccountHandlerFunc) Handle(params RestCreateAccountParams) middleware.Responder {
	return fn(params)
}

// RestCreateAccountHandler interface for that can handle valid rest create account params
type RestCreateAccountHandler interface {
	Handle(RestCreateAccountParams) middleware.Responder
}

// NewRestCreateAccount creates a new http.Handler for the rest create account operation
func NewRestCreateAccount(ctx *middleware.Context, handler RestCreateAccountHandler) *RestCreateAccount {
	return &RestCreateAccount{Context: ctx, Handler: handler}
}

/*
	RestCreateAccount swagger:route POST /api/accounts/{nickname} restCreateAccount

Generate a new account with new random keys
*/
type RestCreateAccount struct {
	Context *middleware.Context
	Handler RestCreateAccountHandler
}

func (o *RestCreateAccount) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewRestCreateAccountParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
