// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra-plugin-wallet/api/server/models"
)

// SignOperationOKCode is the HTTP code returned for type SignOperationOK
const SignOperationOKCode int = 200

/*
SignOperationOK Signature.

swagger:response signOperationOK
*/
type SignOperationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Signature `json:"body,omitempty"`
}

// NewSignOperationOK creates SignOperationOK with default headers values
func NewSignOperationOK() *SignOperationOK {

	return &SignOperationOK{}
}

// WithPayload adds the payload to the sign operation o k response
func (o *SignOperationOK) WithPayload(payload *models.Signature) *SignOperationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign operation o k response
func (o *SignOperationOK) SetPayload(payload *models.Signature) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignOperationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignOperationBadRequestCode is the HTTP code returned for type SignOperationBadRequest
const SignOperationBadRequestCode int = 400

/*
SignOperationBadRequest Bad request.

swagger:response signOperationBadRequest
*/
type SignOperationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSignOperationBadRequest creates SignOperationBadRequest with default headers values
func NewSignOperationBadRequest() *SignOperationBadRequest {

	return &SignOperationBadRequest{}
}

// WithPayload adds the payload to the sign operation bad request response
func (o *SignOperationBadRequest) WithPayload(payload *models.Error) *SignOperationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign operation bad request response
func (o *SignOperationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignOperationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignOperationUnauthorizedCode is the HTTP code returned for type SignOperationUnauthorized
const SignOperationUnauthorizedCode int = 401

/*
SignOperationUnauthorized Unauthorized - The request requires user authentication. Only if no correlationId is provided.

swagger:response signOperationUnauthorized
*/
type SignOperationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSignOperationUnauthorized creates SignOperationUnauthorized with default headers values
func NewSignOperationUnauthorized() *SignOperationUnauthorized {

	return &SignOperationUnauthorized{}
}

// WithPayload adds the payload to the sign operation unauthorized response
func (o *SignOperationUnauthorized) WithPayload(payload *models.Error) *SignOperationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign operation unauthorized response
func (o *SignOperationUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignOperationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignOperationNotFoundCode is the HTTP code returned for type SignOperationNotFound
const SignOperationNotFoundCode int = 404

/*
SignOperationNotFound Account Not found.

swagger:response signOperationNotFound
*/
type SignOperationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSignOperationNotFound creates SignOperationNotFound with default headers values
func NewSignOperationNotFound() *SignOperationNotFound {

	return &SignOperationNotFound{}
}

// WithPayload adds the payload to the sign operation not found response
func (o *SignOperationNotFound) WithPayload(payload *models.Error) *SignOperationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign operation not found response
func (o *SignOperationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignOperationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignOperationUnprocessableEntityCode is the HTTP code returned for type SignOperationUnprocessableEntity
const SignOperationUnprocessableEntityCode int = 422

/*
SignOperationUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response signOperationUnprocessableEntity
*/
type SignOperationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSignOperationUnprocessableEntity creates SignOperationUnprocessableEntity with default headers values
func NewSignOperationUnprocessableEntity() *SignOperationUnprocessableEntity {

	return &SignOperationUnprocessableEntity{}
}

// WithPayload adds the payload to the sign operation unprocessable entity response
func (o *SignOperationUnprocessableEntity) WithPayload(payload *models.Error) *SignOperationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign operation unprocessable entity response
func (o *SignOperationUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignOperationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignOperationInternalServerErrorCode is the HTTP code returned for type SignOperationInternalServerError
const SignOperationInternalServerErrorCode int = 500

/*
SignOperationInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response signOperationInternalServerError
*/
type SignOperationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSignOperationInternalServerError creates SignOperationInternalServerError with default headers values
func NewSignOperationInternalServerError() *SignOperationInternalServerError {

	return &SignOperationInternalServerError{}
}

// WithPayload adds the payload to the sign operation internal server error response
func (o *SignOperationInternalServerError) WithPayload(payload *models.Error) *SignOperationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign operation internal server error response
func (o *SignOperationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignOperationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
