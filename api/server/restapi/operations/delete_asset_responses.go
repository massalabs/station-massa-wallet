// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/massalabs/station-massa-wallet/api/server/models"
)

// DeleteAssetCreatedCode is the HTTP code returned for type DeleteAssetCreated
const DeleteAssetCreatedCode int = 201

/*
DeleteAssetCreated Asset information deleted successfully.

swagger:response deleteAssetCreated
*/
type DeleteAssetCreated struct {
}

// NewDeleteAssetCreated creates DeleteAssetCreated with default headers values
func NewDeleteAssetCreated() *DeleteAssetCreated {

	return &DeleteAssetCreated{}
}

// WriteResponse to the client
func (o *DeleteAssetCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// DeleteAssetBadRequestCode is the HTTP code returned for type DeleteAssetBadRequest
const DeleteAssetBadRequestCode int = 400

/*
DeleteAssetBadRequest Bad request.

swagger:response deleteAssetBadRequest
*/
type DeleteAssetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAssetBadRequest creates DeleteAssetBadRequest with default headers values
func NewDeleteAssetBadRequest() *DeleteAssetBadRequest {

	return &DeleteAssetBadRequest{}
}

// WithPayload adds the payload to the delete asset bad request response
func (o *DeleteAssetBadRequest) WithPayload(payload *models.Error) *DeleteAssetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete asset bad request response
func (o *DeleteAssetBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAssetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteAssetNotFoundCode is the HTTP code returned for type DeleteAssetNotFound
const DeleteAssetNotFoundCode int = 404

/*
DeleteAssetNotFound Not found - At least one of the provided addresses is not valid.

swagger:response deleteAssetNotFound
*/
type DeleteAssetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAssetNotFound creates DeleteAssetNotFound with default headers values
func NewDeleteAssetNotFound() *DeleteAssetNotFound {

	return &DeleteAssetNotFound{}
}

// WithPayload adds the payload to the delete asset not found response
func (o *DeleteAssetNotFound) WithPayload(payload *models.Error) *DeleteAssetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete asset not found response
func (o *DeleteAssetNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAssetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteAssetInternalServerErrorCode is the HTTP code returned for type DeleteAssetInternalServerError
const DeleteAssetInternalServerErrorCode int = 500

/*
DeleteAssetInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response deleteAssetInternalServerError
*/
type DeleteAssetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAssetInternalServerError creates DeleteAssetInternalServerError with default headers values
func NewDeleteAssetInternalServerError() *DeleteAssetInternalServerError {

	return &DeleteAssetInternalServerError{}
}

// WithPayload adds the payload to the delete asset internal server error response
func (o *DeleteAssetInternalServerError) WithPayload(payload *models.Error) *DeleteAssetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete asset internal server error response
func (o *DeleteAssetInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAssetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
