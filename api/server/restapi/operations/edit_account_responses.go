// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra-plugin-wallet/api/server/models"
)

// EditAccountOKCode is the HTTP code returned for type EditAccountOK
const EditAccountOKCode int = 200

/*
EditAccountOK Account edited successfully.

swagger:response editAccountOK
*/
type EditAccountOK struct {

	/*
	  In: Body
	*/
	Payload *models.Account `json:"body,omitempty"`
}

// NewEditAccountOK creates EditAccountOK with default headers values
func NewEditAccountOK() *EditAccountOK {

	return &EditAccountOK{}
}

// WithPayload adds the payload to the edit account o k response
func (o *EditAccountOK) WithPayload(payload *models.Account) *EditAccountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit account o k response
func (o *EditAccountOK) SetPayload(payload *models.Account) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditAccountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EditAccountBadRequestCode is the HTTP code returned for type EditAccountBadRequest
const EditAccountBadRequestCode int = 400

/*
EditAccountBadRequest Bad request.

swagger:response editAccountBadRequest
*/
type EditAccountBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewEditAccountBadRequest creates EditAccountBadRequest with default headers values
func NewEditAccountBadRequest() *EditAccountBadRequest {

	return &EditAccountBadRequest{}
}

// WithPayload adds the payload to the edit account bad request response
func (o *EditAccountBadRequest) WithPayload(payload *models.Error) *EditAccountBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit account bad request response
func (o *EditAccountBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditAccountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EditAccountNotFoundCode is the HTTP code returned for type EditAccountNotFound
const EditAccountNotFoundCode int = 404

/*
EditAccountNotFound Not found.

swagger:response editAccountNotFound
*/
type EditAccountNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewEditAccountNotFound creates EditAccountNotFound with default headers values
func NewEditAccountNotFound() *EditAccountNotFound {

	return &EditAccountNotFound{}
}

// WithPayload adds the payload to the edit account not found response
func (o *EditAccountNotFound) WithPayload(payload *models.Error) *EditAccountNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit account not found response
func (o *EditAccountNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditAccountNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EditAccountUnprocessableEntityCode is the HTTP code returned for type EditAccountUnprocessableEntity
const EditAccountUnprocessableEntityCode int = 422

/*
EditAccountUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response editAccountUnprocessableEntity
*/
type EditAccountUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewEditAccountUnprocessableEntity creates EditAccountUnprocessableEntity with default headers values
func NewEditAccountUnprocessableEntity() *EditAccountUnprocessableEntity {

	return &EditAccountUnprocessableEntity{}
}

// WithPayload adds the payload to the edit account unprocessable entity response
func (o *EditAccountUnprocessableEntity) WithPayload(payload *models.Error) *EditAccountUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit account unprocessable entity response
func (o *EditAccountUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditAccountUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EditAccountInternalServerErrorCode is the HTTP code returned for type EditAccountInternalServerError
const EditAccountInternalServerErrorCode int = 500

/*
EditAccountInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response editAccountInternalServerError
*/
type EditAccountInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewEditAccountInternalServerError creates EditAccountInternalServerError with default headers values
func NewEditAccountInternalServerError() *EditAccountInternalServerError {

	return &EditAccountInternalServerError{}
}

// WithPayload adds the payload to the edit account internal server error response
func (o *EditAccountInternalServerError) WithPayload(payload *models.Error) *EditAccountInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit account internal server error response
func (o *EditAccountInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditAccountInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
