// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra-plugin-wallet/api/server/models"
)

// TradeRollsOKCode is the HTTP code returned for type TradeRollsOK
const TradeRollsOKCode int = 200

/*
TradeRollsOK Operation id

swagger:response tradeRollsOK
*/
type TradeRollsOK struct {

	/*
	  In: Body
	*/
	Payload *models.OperationResponse `json:"body,omitempty"`
}

// NewTradeRollsOK creates TradeRollsOK with default headers values
func NewTradeRollsOK() *TradeRollsOK {

	return &TradeRollsOK{}
}

// WithPayload adds the payload to the trade rolls o k response
func (o *TradeRollsOK) WithPayload(payload *models.OperationResponse) *TradeRollsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trade rolls o k response
func (o *TradeRollsOK) SetPayload(payload *models.OperationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TradeRollsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TradeRollsBadRequestCode is the HTTP code returned for type TradeRollsBadRequest
const TradeRollsBadRequestCode int = 400

/*
TradeRollsBadRequest Bad request.

swagger:response tradeRollsBadRequest
*/
type TradeRollsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTradeRollsBadRequest creates TradeRollsBadRequest with default headers values
func NewTradeRollsBadRequest() *TradeRollsBadRequest {

	return &TradeRollsBadRequest{}
}

// WithPayload adds the payload to the trade rolls bad request response
func (o *TradeRollsBadRequest) WithPayload(payload *models.Error) *TradeRollsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trade rolls bad request response
func (o *TradeRollsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TradeRollsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TradeRollsUnauthorizedCode is the HTTP code returned for type TradeRollsUnauthorized
const TradeRollsUnauthorizedCode int = 401

/*
TradeRollsUnauthorized Unauthorized - The request requires user authentication.

swagger:response tradeRollsUnauthorized
*/
type TradeRollsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTradeRollsUnauthorized creates TradeRollsUnauthorized with default headers values
func NewTradeRollsUnauthorized() *TradeRollsUnauthorized {

	return &TradeRollsUnauthorized{}
}

// WithPayload adds the payload to the trade rolls unauthorized response
func (o *TradeRollsUnauthorized) WithPayload(payload *models.Error) *TradeRollsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trade rolls unauthorized response
func (o *TradeRollsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TradeRollsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TradeRollsNotFoundCode is the HTTP code returned for type TradeRollsNotFound
const TradeRollsNotFoundCode int = 404

/*
TradeRollsNotFound Account Not found.

swagger:response tradeRollsNotFound
*/
type TradeRollsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTradeRollsNotFound creates TradeRollsNotFound with default headers values
func NewTradeRollsNotFound() *TradeRollsNotFound {

	return &TradeRollsNotFound{}
}

// WithPayload adds the payload to the trade rolls not found response
func (o *TradeRollsNotFound) WithPayload(payload *models.Error) *TradeRollsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trade rolls not found response
func (o *TradeRollsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TradeRollsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TradeRollsUnprocessableEntityCode is the HTTP code returned for type TradeRollsUnprocessableEntity
const TradeRollsUnprocessableEntityCode int = 422

/*
TradeRollsUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response tradeRollsUnprocessableEntity
*/
type TradeRollsUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTradeRollsUnprocessableEntity creates TradeRollsUnprocessableEntity with default headers values
func NewTradeRollsUnprocessableEntity() *TradeRollsUnprocessableEntity {

	return &TradeRollsUnprocessableEntity{}
}

// WithPayload adds the payload to the trade rolls unprocessable entity response
func (o *TradeRollsUnprocessableEntity) WithPayload(payload *models.Error) *TradeRollsUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trade rolls unprocessable entity response
func (o *TradeRollsUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TradeRollsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TradeRollsInternalServerErrorCode is the HTTP code returned for type TradeRollsInternalServerError
const TradeRollsInternalServerErrorCode int = 500

/*
TradeRollsInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response tradeRollsInternalServerError
*/
type TradeRollsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTradeRollsInternalServerError creates TradeRollsInternalServerError with default headers values
func NewTradeRollsInternalServerError() *TradeRollsInternalServerError {

	return &TradeRollsInternalServerError{}
}

// WithPayload adds the payload to the trade rolls internal server error response
func (o *TradeRollsInternalServerError) WithPayload(payload *models.Error) *TradeRollsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trade rolls internal server error response
func (o *TradeRollsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TradeRollsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
