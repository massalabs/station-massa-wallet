// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/massalabs/thyra-plugin-wallet/api/server/models"
)

// RestAccountSignOperationOKCode is the HTTP code returned for type RestAccountSignOperationOK
const RestAccountSignOperationOKCode int = 200

/*
RestAccountSignOperationOK Signature.

swagger:response restAccountSignOperationOK
*/
type RestAccountSignOperationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Signature `json:"body,omitempty"`
}

// NewRestAccountSignOperationOK creates RestAccountSignOperationOK with default headers values
func NewRestAccountSignOperationOK() *RestAccountSignOperationOK {

	return &RestAccountSignOperationOK{}
}

// WithPayload adds the payload to the rest account sign operation o k response
func (o *RestAccountSignOperationOK) WithPayload(payload *models.Signature) *RestAccountSignOperationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest account sign operation o k response
func (o *RestAccountSignOperationOK) SetPayload(payload *models.Signature) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestAccountSignOperationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestAccountSignOperationBadRequestCode is the HTTP code returned for type RestAccountSignOperationBadRequest
const RestAccountSignOperationBadRequestCode int = 400

/*
RestAccountSignOperationBadRequest Bad request.

swagger:response restAccountSignOperationBadRequest
*/
type RestAccountSignOperationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestAccountSignOperationBadRequest creates RestAccountSignOperationBadRequest with default headers values
func NewRestAccountSignOperationBadRequest() *RestAccountSignOperationBadRequest {

	return &RestAccountSignOperationBadRequest{}
}

// WithPayload adds the payload to the rest account sign operation bad request response
func (o *RestAccountSignOperationBadRequest) WithPayload(payload *models.Error) *RestAccountSignOperationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest account sign operation bad request response
func (o *RestAccountSignOperationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestAccountSignOperationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestAccountSignOperationUnauthorizedCode is the HTTP code returned for type RestAccountSignOperationUnauthorized
const RestAccountSignOperationUnauthorizedCode int = 401

/*
RestAccountSignOperationUnauthorized Unauthorized - The request requires user authentication. Only if no correlationId is provided.

swagger:response restAccountSignOperationUnauthorized
*/
type RestAccountSignOperationUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestAccountSignOperationUnauthorized creates RestAccountSignOperationUnauthorized with default headers values
func NewRestAccountSignOperationUnauthorized() *RestAccountSignOperationUnauthorized {

	return &RestAccountSignOperationUnauthorized{}
}

// WithPayload adds the payload to the rest account sign operation unauthorized response
func (o *RestAccountSignOperationUnauthorized) WithPayload(payload *models.Error) *RestAccountSignOperationUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest account sign operation unauthorized response
func (o *RestAccountSignOperationUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestAccountSignOperationUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestAccountSignOperationNotFoundCode is the HTTP code returned for type RestAccountSignOperationNotFound
const RestAccountSignOperationNotFoundCode int = 404

/*
RestAccountSignOperationNotFound Account Not found.

swagger:response restAccountSignOperationNotFound
*/
type RestAccountSignOperationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestAccountSignOperationNotFound creates RestAccountSignOperationNotFound with default headers values
func NewRestAccountSignOperationNotFound() *RestAccountSignOperationNotFound {

	return &RestAccountSignOperationNotFound{}
}

// WithPayload adds the payload to the rest account sign operation not found response
func (o *RestAccountSignOperationNotFound) WithPayload(payload *models.Error) *RestAccountSignOperationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest account sign operation not found response
func (o *RestAccountSignOperationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestAccountSignOperationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestAccountSignOperationUnprocessableEntityCode is the HTTP code returned for type RestAccountSignOperationUnprocessableEntity
const RestAccountSignOperationUnprocessableEntityCode int = 422

/*
RestAccountSignOperationUnprocessableEntity Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.

swagger:response restAccountSignOperationUnprocessableEntity
*/
type RestAccountSignOperationUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestAccountSignOperationUnprocessableEntity creates RestAccountSignOperationUnprocessableEntity with default headers values
func NewRestAccountSignOperationUnprocessableEntity() *RestAccountSignOperationUnprocessableEntity {

	return &RestAccountSignOperationUnprocessableEntity{}
}

// WithPayload adds the payload to the rest account sign operation unprocessable entity response
func (o *RestAccountSignOperationUnprocessableEntity) WithPayload(payload *models.Error) *RestAccountSignOperationUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest account sign operation unprocessable entity response
func (o *RestAccountSignOperationUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestAccountSignOperationUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RestAccountSignOperationInternalServerErrorCode is the HTTP code returned for type RestAccountSignOperationInternalServerError
const RestAccountSignOperationInternalServerErrorCode int = 500

/*
RestAccountSignOperationInternalServerError Internal Server Error - The server has encountered a situation it does not know how to handle.

swagger:response restAccountSignOperationInternalServerError
*/
type RestAccountSignOperationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestAccountSignOperationInternalServerError creates RestAccountSignOperationInternalServerError with default headers values
func NewRestAccountSignOperationInternalServerError() *RestAccountSignOperationInternalServerError {

	return &RestAccountSignOperationInternalServerError{}
}

// WithPayload adds the payload to the rest account sign operation internal server error response
func (o *RestAccountSignOperationInternalServerError) WithPayload(payload *models.Error) *RestAccountSignOperationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rest account sign operation internal server error response
func (o *RestAccountSignOperationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestAccountSignOperationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
