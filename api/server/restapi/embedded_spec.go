// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Thyra plugin - Massa wallet",
    "title": "massa-wallet",
    "version": "0.0.0"
  },
  "paths": {
    "/rest/wallet": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletList",
        "responses": {
          "200": {
            "description": "Wallets retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletImport",
        "parameters": [
          {
            "x-nullable": false,
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet imported."
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletCreate",
        "parameters": [
          {
            "x-nullable": false,
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "nickname",
                "password"
              ],
              "properties": {
                "nickname": {
                  "description": "Wallet's short name.",
                  "type": "string"
                },
                "password": {
                  "description": "Private key password.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New wallet created.",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/wallet/{nickname}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletGet",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet's short name.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet retrieved.",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletDelete",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet's short name.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet removed.",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/wallet/{nickname}/signOperation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletSignOperation",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet's short name.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "x-nullable": false,
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "operation"
              ],
              "properties": {
                "operation": {
                  "description": "Serialized attributes of the operation to be signed with the key pair corresponding to the given nickname.",
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signature.",
            "schema": {
              "$ref": "#/definitions/Signature"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/web/{resource}": {
      "get": {
        "produces": [
          "application/json",
          "text/javascript",
          "text/html",
          "text/css",
          "text/webp",
          "image/png"
        ],
        "operationId": "web",
        "parameters": [
          {
            "type": "string",
            "default": "index.html",
            "description": "Website resource.",
            "name": "resource",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Page found"
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "description": "Error object.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "error code.",
          "type": "string",
          "x-nullable": false
        },
        "message": {
          "description": "error message.",
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Signature": {
      "description": "Signature of a sent operation.",
      "type": "object",
      "required": [
        "signature",
        "publicKey"
      ],
      "properties": {
        "publicKey": {
          "description": "Public part of the key pair used to sign the operation.",
          "type": "string",
          "x-nullable": false
        },
        "signature": {
          "description": "Hash of the operation attributes encrypted with the private part of the key pair.",
          "type": "string",
          "format": "byte",
          "x-nullable": false
        }
      }
    },
    "Wallet": {
      "description": "Wallet object (V0).",
      "type": "object",
      "required": [
        "nickname",
        "address",
        "keyPairs"
      ],
      "properties": {
        "address": {
          "description": "wallet's address.",
          "type": "string"
        },
        "balance": {
          "description": "wallet's balance.",
          "type": "number"
        },
        "keyPairs": {
          "description": "wallet's key pairs.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "privateKey",
              "publicKey",
              "salt",
              "nonce"
            ],
            "properties": {
              "nonce": {
                "description": "Nonce used by the AES-GCM algorithm used to protect the key pair's private key.",
                "type": "string",
                "format": "base58check"
              },
              "privateKey": {
                "description": "Key pair's private key.",
                "type": "string",
                "format": "base58check"
              },
              "publicKey": {
                "description": "Key pair's public key.",
                "type": "string",
                "format": "base58check"
              },
              "salt": {
                "description": "Salt used by the PBKDF that generates the secret key used to protect the key pair's private key.",
                "type": "string",
                "format": "base58check"
              }
            }
          }
        },
        "nickname": {
          "description": "wallet's nickname.",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Thyra plugin - Massa wallet",
    "title": "massa-wallet",
    "version": "0.0.0"
  },
  "paths": {
    "/rest/wallet": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletList",
        "responses": {
          "200": {
            "description": "Wallets retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletImport",
        "parameters": [
          {
            "x-nullable": false,
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet imported."
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletCreate",
        "parameters": [
          {
            "x-nullable": false,
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "nickname",
                "password"
              ],
              "properties": {
                "nickname": {
                  "description": "Wallet's short name.",
                  "type": "string"
                },
                "password": {
                  "description": "Private key password.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New wallet created.",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/wallet/{nickname}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletGet",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet's short name.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet retrieved.",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletDelete",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet's short name.",
            "name": "nickname",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet removed.",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/rest/wallet/{nickname}/signOperation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "restWalletSignOperation",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet's short name.",
            "name": "nickname",
            "in": "path",
            "required": true
          },
          {
            "x-nullable": false,
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "operation"
              ],
              "properties": {
                "operation": {
                  "description": "Serialized attributes of the operation to be signed with the key pair corresponding to the given nickname.",
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signature.",
            "schema": {
              "$ref": "#/definitions/Signature"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity - syntax is correct, but the server was unable to process the contained instructions.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error - The server has encountered a situation it does not know how to handle.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/web/{resource}": {
      "get": {
        "produces": [
          "application/json",
          "image/png",
          "text/css",
          "text/html",
          "text/javascript",
          "text/webp"
        ],
        "operationId": "web",
        "parameters": [
          {
            "type": "string",
            "default": "index.html",
            "description": "Website resource.",
            "name": "resource",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Page found"
          },
          "404": {
            "description": "Resource not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "description": "Error object.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "error code.",
          "type": "string",
          "x-nullable": false
        },
        "message": {
          "description": "error message.",
          "type": "string",
          "x-nullable": false
        }
      }
    },
    "Signature": {
      "description": "Signature of a sent operation.",
      "type": "object",
      "required": [
        "signature",
        "publicKey"
      ],
      "properties": {
        "publicKey": {
          "description": "Public part of the key pair used to sign the operation.",
          "type": "string",
          "x-nullable": false
        },
        "signature": {
          "description": "Hash of the operation attributes encrypted with the private part of the key pair.",
          "type": "string",
          "format": "byte",
          "x-nullable": false
        }
      }
    },
    "Wallet": {
      "description": "Wallet object (V0).",
      "type": "object",
      "required": [
        "nickname",
        "address",
        "keyPairs"
      ],
      "properties": {
        "address": {
          "description": "wallet's address.",
          "type": "string"
        },
        "balance": {
          "description": "wallet's balance.",
          "type": "number"
        },
        "keyPairs": {
          "description": "wallet's key pairs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletKeyPairsItems0"
          }
        },
        "nickname": {
          "description": "wallet's nickname.",
          "type": "string"
        }
      }
    },
    "WalletKeyPairsItems0": {
      "type": "object",
      "required": [
        "privateKey",
        "publicKey",
        "salt",
        "nonce"
      ],
      "properties": {
        "nonce": {
          "description": "Nonce used by the AES-GCM algorithm used to protect the key pair's private key.",
          "type": "string",
          "format": "base58check"
        },
        "privateKey": {
          "description": "Key pair's private key.",
          "type": "string",
          "format": "base58check"
        },
        "publicKey": {
          "description": "Key pair's public key.",
          "type": "string",
          "format": "base58check"
        },
        "salt": {
          "description": "Salt used by the PBKDF that generates the secret key used to protect the key pair's private key.",
          "type": "string",
          "format": "base58check"
        }
      }
    }
  }
}`))
}
