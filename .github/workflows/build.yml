# This is a configuration file for a GitHub Actions workflow.
on:
  push:
    branches: [ main ]
  workflow_call:

jobs:
  build:
    name: build
    # The build job has a matrix strategy, which means it will run multiple times with different combinations of the os, arch, and target variables.
    strategy:
      matrix:
        include:
          # The first combination is Ubuntu running on an AMD64 processor, building for Windows.
          - os: ubuntu-latest
            arch: amd64
            target: windows
          # The second combination is Ubuntu running on an AMD64 processor, building for Linux.
          - os: ubuntu-latest
            arch: amd64
            target: linux
          # The third combination is macOS running on an AMD64 processor, building for Darwin (macOS).
          - os: macos-latest
            arch: amd64
            target: darwin
          # The fourth combination is macOS running on an ARM64 processor, building for Darwin (macOS).
          - os: macos-latest
            arch: arm64
            target: darwin

    # The build job runs on the specified operating system.
    runs-on: ${{ matrix.os }}
    steps:
      # The first step checks out the repository.
      - uses: actions/checkout@v3
        with:
          submodules: true
      # The second step sets up Go.
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.3"
      # The third step builds the binary and prepares an archive for publishing.
      # If the operating system is Ubuntu, install xorg-dev.
      # xorg-dev package is required to build certain graphical applications.
      # If the target is Windows, install mingw-w64 and set the CC environment variable.
      # mingw-w64 is a compiler toolchain for Windows. The CC environment variable specifies the C compiler to use.
      - name: Build binary and prepare archive for publish
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y xorg-dev
          fi
          if [ "${{ matrix.target }}" == "windows" ]; then
            sudo apt-get install gcc-mingw-w64
            export CC=x86_64-w64-mingw32-gcc
          fi
          export GOOS=${{ matrix.target }}
          export GOARCH=${{ matrix.arch }} 
          ./build.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          # Name the artifact using the values of the matrix.target and matrix.arch variables
          name: Wallet-plugin-${{ matrix.target }}_${{ matrix.arch }}
          path: build/wallet-plugin
