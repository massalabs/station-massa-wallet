# This is a configuration file for a GitHub Actions workflow.
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_call:
    inputs:
      tag_name:
        type: string
      draft:
        type: string
      prerelease:
        type: string
      generate_release_notes:
        type: string

jobs:
  build:
    name: build
    # The build job has a matrix strategy, which means it will run multiple times with different combinations of the os, arch, and target variables.
    strategy:
      matrix:
        include:
          # The first combination is Ubuntu running on an AMD64 processor, building for Windows.
          - os: ubuntu-latest
            arch: amd64
            target: windows
            ext: .exe
            cc: x86_64-w64-mingw32-gcc
          # The second combination is Ubuntu running on an AMD64 processor, building for Linux.
          - os: ubuntu-latest
            arch: amd64
            target: linux
          # The third combination is macOS running on an AMD64 processor, building for Darwin (macOS).
          - os: macos-latest
            arch: amd64
            target: darwin
          # The fourth combination is macOS running on an ARM64 processor, building for Darwin (macOS).
          - os: macos-latest
            arch: arm64
            target: darwin

    # The build job runs on the specified operating system.
    runs-on: ${{ matrix.os }}
    env:
      TARGET_NAME: thyra-plugin-wallet_${{ matrix.target }}-${{ matrix.arch }}
    steps:
      # The first step checks out the repository.
      - uses: actions/checkout@v3
        with:
          submodules: true
      # The second step install the tools.
      - uses: ./.github/actions/install
        with:
          os: ${{ matrix.os }}
      # The third step builds the binary and prepares an archive for publishing.
      # xorg-dev package is required to build certain graphical applications.
      # If the target is Windows, install mingw-w64 and set the CC environment variable.
      # mingw-w64 is a compiler toolchain for Windows. The CC environment variable specifies the C compiler to use.
      - name: Build binary and prepare archive for publish
        shell: bash
        run: |
          export GOOS=${{ matrix.target }}
          export GOARCH=${{ matrix.arch }}
          export CGO_ENABLED=1
          CC=${{ matrix.cc }} go build -o $TARGET_NAME${{ matrix.ext }} cmd/massa-wallet/thyra-plugin-wallet.go
      - name: Upload artifacts
        if: ${{ inputs.tag_name == '' && github.ref_name == 'main' }}
        uses: actions/upload-artifact@v3
        with:
          name: thyra-plugin-wallet_${{ matrix.target }}-${{ matrix.arch }}
          path: ${{ env.TARGET_NAME }}${{ matrix.ext }}
      - name: Zip binary
        if: ${{ inputs.tag_name != '' }}
        run: zip $TARGET_NAME.zip $TARGET_NAME${{ matrix.ext }}
      - name: Create release and upload binaries
        if: ${{ inputs.tag_name != '' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag_name }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          generate_release_notes: ${{ inputs.generate_release_notes }}
          files: "*.zip"
